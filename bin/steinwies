#!/usr/bin/env ruby

$: << File.expand_path('../src', File.dirname(__FILE__))

require 'drb/drb'
require 'steinwies'
require 'util/app'
require 'util/config'

while arg = ARGV.shift
  case arg
	when ''
		# ignore
  when '--detach'
    $detach = true
  when /^--pidfile=(.+)/
    $pidfile = $1
  else
    STDERR.puts "usage: #{$0} [--detach] [--pidfile=PIDFILE] [--env]"
    exit 1
  end
end

if $pidfile
  pidfile = open($pidfile, 'w')
end

if $detach
	puts 'detaching'
  Process.fork and exit!(0)
  Process.setsid
  Process.fork and exit!(0)
  trap('INT') { }
end

app = Steinwies::App.new

if pidfile
  pidfile.puts $$
  pidfile.close

  END { File.unlink $pidfile }
end

trap('HUP')  { puts "caught HUP signal, shutting down\n"; exit }
trap('ALRM') { puts "caught ALRM signal, clearing Sessions\n"; app.clear }
trap('TERM') { puts "caught TERM signal, exiting immediately\n"; exit }

puts 'starting drb-service'
DRb.start_service(Steinwies.config.server_uri, app)

$0 = 'Steinwies (SteinwiesApp)'
DRb.thread.join
